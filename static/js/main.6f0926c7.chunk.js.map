{"version":3,"sources":["components/Button/index.js","pages/Start/index.js","pages/p1/index.js","pages/p2/index.js","pages/p3/index.js","App.js","serviceWorker.js","index.js"],"names":["Button","props","react_default","a","createElement","className","href","link","type","text","Start","components_Button","Component","p1","p2","p3","App","react_router_dom","basename","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8QAUeA,MARf,SAAgBC,GAEZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,KAAGE,KAAQL,EAAMM,MAAML,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAASH,UAAU,mBAAmBJ,EAAMQ,SCgBzEC,mLAjBP,OACIR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAACO,EAAD,CAAQJ,KAAM,MAAOE,KAAM,oBAV/BG,aCWLC,mLATP,OACIX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,gUACAF,EAAAC,EAAAC,cAACO,EAAD,CAAQJ,KAAM,MAAOE,KAAM,iBAL1BG,aCWFE,mLATP,OACIZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,0SACAF,EAAAC,EAAAC,cAACO,EAAD,CAAQJ,KAAM,MAAOE,KAAM,iBAL1BG,aCWFG,mLATP,OACIb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,yGACAF,EAAAC,EAAAC,cAACO,EAAD,CAAQJ,KAAM,IAAKE,KAAM,0BALxBG,mBC4BFI,MArBf,WAEE,OACEd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAQC,SAAS,0BACfhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACe,EAAA,EAAD,KACEjB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWZ,IACjCR,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAOC,KAAK,MAAMC,OAAK,EAACC,UAAWT,IACnCX,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAOC,KAAK,MAAMC,OAAK,EAACC,UAAWR,IACnCZ,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAOC,KAAK,MAAMC,OAAK,EAACC,UAAWP,SCX3BQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO3B,EAAAC,EAAAC,cAAC0B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.6f0926c7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Button(props){\r\n    \r\n    return(\r\n        <div className=\"text-center\">\r\n        <a href = {props.link}><button type=\"button\" className=\"btn btn-primary\">{props.text}</button></a>\r\n        </div>\r\n    )\r\n}\r\nexport default Button;","import React, { Component } from \"react\";\r\nimport Button from \"../../components/Button\";\r\n\r\nclass Start extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"row\" />\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-2\"></div>\r\n                    <div className=\"col-sm-8\">\r\n                    <div className=\"jumbotron text-center mt-5\">\r\n                        <p>Happy Mother's Day Rhonda!</p>\r\n                        <Button link={\"/p1\"} text={\"Next\"} />\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Start;","import React, { Component } from \"react\";\r\nimport Button from \"../../components/Button\";\r\n\r\nclass p1 extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron text-center mt-5\">\r\n                <p>I have known you for nearly four years. Can you believe we're already at that point? In that time, you have become an incredible mother to my boys. You've given them direction, focus, guidance, and a firm hand when needed. As a result, they have become more than they, or I, have ever thought they could be.</p>\r\n                <Button link={\"/p2\"} text={\"Next\"} />\r\n            </div>            \r\n        );\r\n    };\r\n}\r\n\r\nexport default p1;","import React, { Component } from \"react\";\r\nimport Button from \"../../components/Button\";\r\n\r\nclass p2 extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron text-center mt-5\">\r\n                <p>Between us we have four amazing children who have grown well beyond anyone's expectations. It is because of you. You made the effort. You took the time to be there for them. You go to their school meetings, their birthdays, their events, everything. You strive to be the best for them.</p>\r\n                <Button link={\"/p3\"} text={\"Next\"} />\r\n            </div>            \r\n        );\r\n    };\r\n}\r\n\r\nexport default p2;","import React, { Component } from \"react\";\r\nimport Button from \"../../components/Button\";\r\n\r\nclass p3 extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron text-center mt-5\">\r\n                <p>All I can say is...thank you. For everything. Happy Mother's Day Rhonda. I love you so much.</p>\r\n                <Button link={\"/\"} text={\"Back to Start\"} />\r\n            </div>            \r\n        );\r\n    };\r\n}\r\n\r\nexport default p3;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Start from \"./pages/Start\";\nimport p1 from \"./pages/p1\";\nimport p2 from \"./pages/p2\";\nimport p3 from \"./pages/p3\";\nimport './App.css';\n\n\n\nfunction App() {\n  \n  return (\n    <Router basename=\"process.env.PUBLIC_URL\">\n      <div className=\"row mb-5\">\n        <div className=\"col mb-5\"></div>\n      </div>\n      <div className=\"row\">\n        <div className=\"container mt-5\">\n          <Switch>\n            <Route path=\"/\" exact component={Start} />\n            <Route path=\"/p1\" exact component={p1} />\n            <Route path=\"/p2\" exact component={p2} />\n            <Route path=\"/p3\" exact component={p3} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}